// –†–ï–ö–£–†–°–ò–Ø

// let i = 0;
// const recursiveFun = () => {
//     if (i < 1000) {
//         i++
//         console.log(i)
//         return recursiveFun();
//     }
// }
//
// console.log(recursiveFun())

// let i = 0
// const recursive = () => {
//     console.log(i)
//     recursive()
// }
// recursive()

// const test = () => {
//     return test()
// }
// console.log(test())


// –ó–ê–ú–´–ö–ê–ù–ò–ï

// const funTwo = (num1, num2) => {
//     num1 = 5
//     return num1 + num2
// }
// const funOne = (a, b) => {
//     console.log(a)
//     return funTwo(a, b)
// }
// console.log(funOne(1, 2));
//

// function text (t) {
//     return t
// }
//
// function test (a) {
//    return text(a)
// }
//
// console.log(test("Hello"))

// –ö–∞—Ä—Ä–∏—Ä–∞–≤–∞–Ω–∏–µ

// function name (a) {
//     return function (b){
//         return a + b
//     }
// }
// console.log(name(5)(10))

// function generalLink (http) {
//     return function (www) {
//         return function (name) {
//             return function (domain) {
//                 return `${http}://${www}.${name}.${domain}`
//             }
//         }
//     }
// }
// console.log(generalLink('https')('www')('apple')('com'))
// console.log(generalLink('https')('www')('youtube')('com'))
// console.log(generalLink('https')('www')('instagram')('com'))


// const link = (http) => (www) => (name) => (domain) => {
//     return `${http}://${www}.${name}.${domain}`
// }
// console.log(link('http')('www')('youtube')('com'))

///////

// const shoes = {
//     model: "nike",
//     size: 42,
//     color: "white"
// }
//
// console.log(shoes)
// console.log('model' in shoes)
// console.log(shoes.hasOwnProperty('model'))

// const shoes = {
//     model: "Nike",
//     size: 42,
//     color: "white",
//     material: {
//         flex: true
//     }
// }
//
// const newShoes = JSON.parse(JSON.stringify(shoes))
// console.log(shoes)
// console.log(newShoes)
//


// –ù–∞ –≤—Ö–æ–¥–µ –¥–≤–∞ –æ–¥–Ω–æ–º–µ—Ä–Ω—ã—Ö –º–∞—Å—Å–∏–≤–∞.
// –í –∫–∞–∂–¥–æ–º –º–∞—Å—Å–∏–≤–µ –≤—Å–µ–≥–¥–∞ –ø–æ –¥–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–∞.
// –í–µ—Ä–Ω–∏—Ç–µ —Ç—Ä–µ—Ç–∏–π –º–∞—Å—Å–∏–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ—Ç–æ—Ä–æ–≥–æ
// –±—É–¥–µ—Ç —Å—É–º–º–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö

// function test (a,b){
//     let res = []
//     for (let i = 0; i < a.length; i++){
//         res.push(a[i]+b[i])
//     }
//     return res
// }
// console.log(test([2,4],[1,3]))
// Input: [2,4], [1,3]
// Actions:
//     Output: [3,7]
//
// Input: [1,7], [9,3]
// Actions:
//     Output: [10, 10]
// function  task (a,b){
//     let num = []
//     for (let i = 0; i < a.length; i++){
//        num.push(a[i]+b[i])
//     }
//    return num
// }
//
// console.log(task([1,7],[9,3]))
// Task 2
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç
// –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ —ç—Ç–∏—Ö
// —á–∏—Å–µ–ª —É–º–Ω–æ–∂–µ–Ω–Ω—ã—Ö –Ω–∞ –¥–≤–∞
// function arr(a) {
//     let b = a.map(el =>{
//         return el * 2
//     })
//     return b
// }
//
// console.log(arr([1,2,3,4,5]))

// function arr(a) {
//     let b = a.map(el =>{
//         return el * 2
//     })
//     return b
// }
//
// console.log(arr([7,14]))
// Input: [1,2,3,4,5]
// Output: [2,4,6,8,10]
//
// Input: [7,14]
// Output: [14,28]


// Task 3
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤
// –æ–±—ä–µ–∫—Ç–æ–≤ —Å –ø–æ–ª–µ–º id. –ù–∞–ø—Ä–∏–º–µ—Ä [[{id: '100'}, {id: 2}]] –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç
// –º–∞—Å—Å–∏–≤ —ç—Ç–∏—Ö id
// let arr=[{id: 1},{id: 2},{id: 3},{id: 4}]
// function task(arr){
//     return arr.map(el=>{
//         return el.id
//     })
// }
//
// console.log(task(arr))

// Input: [{id: 1},{id: 2},{id: 3},{id: 4}]
// Output: [1,2,3,4]

// let arr=[{id: true}]
// function task(arr){
//     return arr.map(el=>{
//         return el.id
//     })
// }

// console.log(task(arr))


// Input: [{id: true}]
// Output: [true]
// Task 4
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫ –ø–æ —à–∞–±–ª–æ–Ω—É <h1>{number}</h1>
// Input: [1,2]
// Output: ['<h1>1</h1>','<h1>2</h1>']

// let task=[1,2]
// function arr(task){
//     return task.map(el=>{
//         return `<h1>${el}<h1/>`
//     })
// }
//
// console.log(arr(task))
//
// Input: ['Ivan']
// Output: ['<h1>Ivan</h1>']

// let task=['Ivan']
// function arr(task){
//     return task.map(el=>{
//         return `<h1>${el}<h1/>`
//     })
// }
//
// console.log(arr(task))

// Task 5
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫ —Å —á–µ—Ç–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –±—É–∫–≤
// Input: ['ab','abc','abcd']
// Output: ['ab','abcd']

// let task=['ab','abc','abcd']
// function arr(task){
//     return task.filter(el=>{
//         if (el.length%2===0){
//             return el
//         }else return false
//     })
// }
//
// console.log(arr(task))
//
// Input: ['abc','abcde']
// Output: []

// let task=['abc','abcde']
// function arr(task){
//     return task.filter(el=>{
//         if (el.length%2===0){
//             return el
//
//         }
//     })
// }
//
// console.log(arr(task))

// Task 6
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç
// –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª —É–º–Ω–æ–∂–µ–Ω–Ω—ã—Ö –Ω–∞ –¥–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–ª—è—Ç—Å—è –Ω–∞ 10 –±–µ–∑ –æ—Å—Ç–∞—Ç–∫–∞
// Input: [1,2,3,7,10,5]
// Output: [20,10]
// Input: [1,2,3,7,9,4]
// Output: []

// Task 7
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ –±—É–ª–µ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
// –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Ç–æ–ª—å–∫–æ —Å–æ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ true
// Input: [true,false,true,true]
// Output: [true,true,true]
// Input: [false,true]
// Output: [true]

// Task 8
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∑–Ω–∞—á–µ–Ω–∏–π –≤ —Ç.—á –∏
// –∑–Ω–∞—á–µ–Ω–∏—è undefined –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Ç–æ–ª—å–∫–æ –±–µ–∑ –∑–Ω–∞—á–µ–Ω–∏–π undefined
// Input: [true, false, true, true, undefined, true, undefined]
// Output: [true, false, true, true, true]
// Input: [undefined, true, undefined]
// Output: [true]

// const test = [true, false, 1234, "12345", true, true, undefined, true, undefined];
// const t = []
// const task = (a) => {
//     a.filter(el => {
//         if (el !== undefined) {
//             t.push(el)
//         }
//     })
// }
// task(test)
// console.log(t)

// Task 9
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª –∏
// –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ö —Å—É–º–º—É. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å reduce
// Input: [1,2,3,4,5]
// Output: 15
// Input: [2, 11, 5]
// Output: 18

// let numbers = new Array(100).fill(0).map((el, idx) => idx + 1)
//
// const task = (a) => {
//     let test = a.reduce((acc, el) => {
//         return acc + el
//     }, 0)
//
//     console.log(test)
// }
// task(numbers)

// Task 10
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ –±—É–ª–µ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç
// —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –ò –Ω–∞–¥ –Ω–∏–º–∏. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å reduce
// –õ–æ–≥–∏—á–µ—Å–∫–æ–µ –ò - —ç—Ç–æ –æ–ø–µ—Ä–∞—Ü–∏—è &&
// Input: [true,true,true,true]
// Output: true
// // Input: [true,false,true]
// // Output: false
//
// let numbers = [true, false, true, true];
//
// const task = () => {
//     let a = numbers.reduce((acc, el) => {
//         if (el === true && acc === true) {
//             return el
//         } else {
//             return false
//         }
//     })
//
//     console.log(a)
// }
// task()

// Task 11
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —á–µ–≥–æ
// —É–≥–æ–¥–Ω–æ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Å –ø–æ–ª—è–º–∏
// {field1, field2, field3, field4}.
// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å reduce. –ì–æ—Ç–æ–≤–∏–º –±–∞–Ω–æ—á–∫–∏ –∏ –Ω–µ –æ—Ç—á–∞–∏–≤–∞–µ–º—Å—è. –ë—É–¥–µ—Ç üî•
// Input: [true,1,'wow','you are smart, bro']
// Output: {field1: true, field2:1, field3: 'wow', field4: 'you are smart, bro'}

// let arr = [true, 1, 'wow', 'you are smart, bro'];
// const task = () => {
//     let a = arr.reduce((acc, el, idx) => {
//         acc['field' + (idx + 1)] = el
//         return acc;
//     }, {});
//     console.log(a);
// };
// task();

// Task 12
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–±—ä–µ–∫—Ç,
// –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç.
// –¢–æ–ª—å–∫–æ —Å –ø–æ–ª—è–º–∏, —É –∫–æ—Ç–æ—Ä—ã—Ö —Ç–∏–ø –∑–Ω–∞—á–µ–Ω–∏—è - —Å—Ç—Ä–æ–∫–∞;
// Input: { name: 'Baha', isAdmin: true }
// Actions:
// Output: { name: 'Baha' }
// Input: { isAdmin: true }
// Actions:
// Output: {}

// let obj = {
//     name: "baha",
//     age: 12,
//     tel: true,
//     text: "false"
// }
//
// const task = () => {
//     for (let key in obj) {
//         if (typeof obj[key] === "string") {
//             console.log(key, obj[key])
//         }
//     }
// }
// task()